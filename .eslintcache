[{"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/index.js":"1","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/reportWebVitals.js":"2","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/App.js":"3","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Visualizer.js":"4","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Node.js":"5","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Algorithms/dijkstra.js":"6","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Algorithms/AStar.js":"7"},{"size":457,"mtime":1607697232354,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1607676521735,"results":"10","hashOfConfig":"9"},{"size":2565,"mtime":1607789743727,"results":"11","hashOfConfig":"9"},{"size":8699,"mtime":1607787791571,"results":"12","hashOfConfig":"9"},{"size":758,"mtime":1607781383354,"results":"13","hashOfConfig":"9"},{"size":1605,"mtime":1607786843572,"results":"14","hashOfConfig":"9"},{"size":2126,"mtime":1607786823491,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"lu4nte",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/index.js",[],["33","34"],"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/reportWebVitals.js",[],"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/App.js",["35","36","37"],"import React from \"react\";\nimport Visulalizer from \"./Visulalizer/Visualizer\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentAlgo: \"Dijkstra\"\n    }\n    this.child = React.createRef()\n  }\n  chageAlgo(a){\n    this.setState({currentAlgo:a})\n  }\n  clear(e){\n    e.preventDefault()\n    this.child.current.clear(e)\n  }\n  Visualize(e){\n    e.preventDefault()\n    const algo = this.state.currentAlgo\n    console.log(algo)\n    if(algo === \"Dijkstra\"){\n      this.child.current.visualizeDijkstra()\n    }\n    if(algo === \"A*\"){\n      this.child.current.visualizeAStar()\n    }\n  }\n  render(){\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <img src=\"./logo.png\" width=\"30\" height=\"30\" style = {{marginRight:\"10px\"}} alt=\"\"></img>\n      <a className=\"navbar-brand\" href=\"#\">Algo Visualizer</a>\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav mr-auto\">\n      {/* <li className=\"nav-item active\">\n      <a className=\"nav-link\" href=\"https://github.com/JaivalBhup/AlgorithmVisualizer-React\">GitHub Repo</a>\n      </li> */}\n      \n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"https://github.com/JaivalBhup/AlgorithmVisualizer-React\">GitHub Repo</a>\n      </li>\n      <li className=\"nav-item dropdown\">\n        <a className=\"nav-link dropdown-toggle\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          {this.state.currentAlgo}\n        </a>\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <button className=\"dropdown-item\" onClick={(e)=>this.chageAlgo(\"Dijkstra\")}>Dijkstra</button>\n          <a className=\"dropdown-item\" onClick={(e)=>this.chageAlgo(\"A*\")}>A*</a>\n          {/* <div className=\"dropdown-divider\"></div>\n          <a className=\"dropdown-item\" href=\"#\">Something else here</a> */}\n        </div>\n      </li>\n      </ul>\n      <form className=\"form-inline my-2 my-lg-0\">\n      <button style={{marginRight: \"10px\"}} className=\"btn btn-danger my-2 my-sm-0\" onClick= {(e)=>this.clear(e)}>Clear Grid</button>\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" onClick= {(e)=>this.Visualize(e)}>Visualize {this.state.currentAlgo}</button>\n      </form>\n      </div>\n      </nav>\n      <Visulalizer\n      ref = {this.child} \n      currentAlgo = {this.state.currentAlgo}\n      ></Visulalizer>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Visualizer.js",[],"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Node.js",[],"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Algorithms/dijkstra.js",[],"/Users/jaivalbhuptani/Desktop/algorithm_visualizer/src/Visulalizer/Algorithms/AStar.js",[],["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":36,"column":7,"nodeType":"46","endLine":36,"endColumn":44},{"ruleId":"44","severity":1,"message":"47","line":47,"column":9,"nodeType":"46","endLine":47,"endColumn":149},{"ruleId":"44","severity":1,"message":"47","line":52,"column":11,"nodeType":"46","endLine":52,"endColumn":76},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["50"],["51"],"no-global-assign","no-unsafe-negation"]